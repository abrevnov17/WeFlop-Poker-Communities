Installation:

1. Setup node environment (from inside feedback-service directory):
https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/development_environment

2. Install node dependencies: npm install

3. Install postgresql: brew install postgresql (need to install brew first)

Setup DB:

1. Start postgresql service:
	a) If database is not initialized: 
		initdb data/db/
	b) change port in postgresql.conf to match config file for service
	c) To start:
	pg_ctl -D data/db/ -l logfile start

2. Create weflop user and create db:
	a) psql -p <port>
	b) CREATE ROLE weflop SUPERUSER CREATEROLE CREATEDB;
 	c) ALTER ROLE weflop WITH PASSWORD '<password>';
	d) ALTER ROLE weflop WITH LOGIN;
	c) CREATE DATABASE Feedback OWNER weflop;

3. Set up DB:

a) Sign into weflop: psql -p <port> -U weflop -d feedback

b) Run Queries:

CREATE TABLE IF NOT EXISTS Announcements (
  id SERIAL PRIMARY KEY,
  body text[],
  date_created timestamp NOT NULL DEFAULT NOW()
);


CREATE TABLE IF NOT EXISTS Polls (
  id SERIAL PRIMARY KEY,
  description text[],
  date_created timestamp NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS PollOptions (
  id SERIAL PRIMARY KEY,
  poll_id integer NOT NULL references Polls(id) ON DELETE CASCADE,
  description text,
  vote_total integer,
  UNIQUE (poll_id, description)
);

CREATE TABLE IF NOT EXISTS Votes (
  id SERIAL PRIMARY KEY,
  poll_id integer NOT NULL REFERENCES Polls(id) ON DELETE CASCADE,
  option_id integer NOT NULL REFERENCES PollOptions(id) ON DELETE CASCADE,
  cast_by integer NOT NULL,
  date_created timestamp NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS Feedback (
  id SERIAL PRIMARY KEY,
  body text NOT NULL,
  user_id int NOT NULL,
  date_created timestamp NOT NULL DEFAULT NOW()
);

CREATE FUNCTION clear_stale_votes() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
      UPDATE PollOptions SET vote_total = vote_total + 1 WHERE id = new.poll_id;
      DELETE FROM Votes WHERE poll_id = new.poll_id;
      RETURN NEW;
    END;
$$;


CREATE TRIGGER clear_stale_votes AFTER INSERT
    ON Votes FOR EACH ROW EXECUTE PROCEDURE 
    delete_stale_votes();

CREATE FUNCTION decrement_vote_count() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
      UPDATE PollOptions SET vote_total = vote_total - 1 WHERE id = OLD.poll_id;
      RETURN OLD;
    END;
$$;

CREATE TRIGGER decrement_vote_count AFTER DELETE
    ON Votes FOR EACH ROW EXECUTE PROCEDURE 
    decrement_vote_count();

Start Service:

1. node app.js


 